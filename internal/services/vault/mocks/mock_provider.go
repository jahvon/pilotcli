// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jahvon/flow/internal/services/vault (interfaces: Provider)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_provider.go -package=mocks github.com/jahvon/flow/internal/services/vault Provider
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	providers "github.com/jahvon/flow/internal/services/vault/providers"
	gomock "go.uber.org/mock/gomock"
)

// MockProvider is a mock of Provider interface.
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider.
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance.
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// New mocks base method.
func (m *MockProvider) New(arg0 map[string]any) (providers.Adapter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0)
	ret0, _ := ret[0].(providers.Adapter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New.
func (mr *MockProviderMockRecorder) New(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockProvider)(nil).New), arg0)
}
